=begin
#Open API, powered by Propertyware


The version of the OpenAPI document: 1.0
Contact: support@propertyware.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'cgi'

module Propertyware
  class InspectionsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve a inspection
    # Retrieves a specific inspection.<br/><br/><b>Required permission:</b><br/><span class=\"permissionBlock\">INSPECTIONS</span> - <code>Read</code> 
    # @param inspection_id [Integer] Inspection ID
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :include_custom_fields includeCustomFields (default to true)
    # @return [Inspection]
    def get_inspection(inspection_id, opts = {})
      data, _status_code, _headers = get_inspection_with_http_info(inspection_id, opts)
      data
    end

    # Retrieve a inspection
    # Retrieves a specific inspection.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Required permission:&lt;/b&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;permissionBlock\&quot;&gt;INSPECTIONS&lt;/span&gt; - &lt;code&gt;Read&lt;/code&gt; 
    # @param inspection_id [Integer] Inspection ID
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :include_custom_fields includeCustomFields (default to true)
    # @return [Array<(Inspection, Integer, Hash)>] Inspection data, response status code and response headers
    def get_inspection_with_http_info(inspection_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InspectionsApi.get_inspection ...'
      end
      # verify the required parameter 'inspection_id' is set
      if @api_client.config.client_side_validation && inspection_id.nil?
        fail ArgumentError, "Missing the required parameter 'inspection_id' when calling InspectionsApi.get_inspection"
      end
      # resource path
      local_var_path = '/inspections/{inspectionId}'.sub('{' + 'inspectionId' + '}', CGI.escape(inspection_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'includeCustomFields'] = opts[:'include_custom_fields'] if !opts[:'include_custom_fields'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Inspection'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['organizationId', 'clientId', 'clientSecret']

      new_options = opts.merge(
        :operation => :"InspectionsApi.get_inspection",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InspectionsApi#get_inspection\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve all inspections
    # Retrieves a list of inspections.<br/><br/><b>Required permission:</b><br/><span class=\"permissionBlock\">INSPECTIONS</span> - <code>Read</code> <br/><br/><b>Sortable by:</b> <code>createddate</code>, <code>number</code>, <code>lastmodifieddatetime</code>, <code>status</code>, <code>id</code>
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :offset &#x60;offset&#x60; indicates the position of the first record to return. The offset is zero-based and the default is 0.
    # @option opts [Integer] :limit &#x60;limit&#x60; indicates the maximum number of results to be returned in the response. &#x60;limit&#x60; can range between 1 and 500 and the default is 100. (default to 100)
    # @option opts [Time] :last_modified_date_time_start Filters results to any item modified on or after the date time specified. 
    # @option opts [Time] :last_modified_date_time_end Filters results to any item modified on or prior to the date time specified. 
    # @option opts [String] :orderby Indicates the field(s) and direction to sort the results in the response.
    # @option opts [String] :status Filters results to inspections with a specific status.
    # @option opts [Integer] :portfolio_id Filters results to inspections associated with a specific portfolio.
    # @option opts [Integer] :building_id Filters results to inspections associated with a specific building.
    # @option opts [String] :type Filters results to inspections with a specific type.
    # @return [Array<Inspection>]
    def get_inspections(opts = {})
      data, _status_code, _headers = get_inspections_with_http_info(opts)
      data
    end

    # Retrieve all inspections
    # Retrieves a list of inspections.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Required permission:&lt;/b&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;permissionBlock\&quot;&gt;INSPECTIONS&lt;/span&gt; - &lt;code&gt;Read&lt;/code&gt; &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Sortable by:&lt;/b&gt; &lt;code&gt;createddate&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;lastmodifieddatetime&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :offset &#x60;offset&#x60; indicates the position of the first record to return. The offset is zero-based and the default is 0.
    # @option opts [Integer] :limit &#x60;limit&#x60; indicates the maximum number of results to be returned in the response. &#x60;limit&#x60; can range between 1 and 500 and the default is 100. (default to 100)
    # @option opts [Time] :last_modified_date_time_start Filters results to any item modified on or after the date time specified. 
    # @option opts [Time] :last_modified_date_time_end Filters results to any item modified on or prior to the date time specified. 
    # @option opts [String] :orderby Indicates the field(s) and direction to sort the results in the response.
    # @option opts [String] :status Filters results to inspections with a specific status.
    # @option opts [Integer] :portfolio_id Filters results to inspections associated with a specific portfolio.
    # @option opts [Integer] :building_id Filters results to inspections associated with a specific building.
    # @option opts [String] :type Filters results to inspections with a specific type.
    # @return [Array<(Array<Inspection>, Integer, Hash)>] Array<Inspection> data, response status code and response headers
    def get_inspections_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InspectionsApi.get_inspections ...'
      end
      # resource path
      local_var_path = '/inspections'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'lastModifiedDateTimeStart'] = opts[:'last_modified_date_time_start'] if !opts[:'last_modified_date_time_start'].nil?
      query_params[:'lastModifiedDateTimeEnd'] = opts[:'last_modified_date_time_end'] if !opts[:'last_modified_date_time_end'].nil?
      query_params[:'orderby'] = opts[:'orderby'] if !opts[:'orderby'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?
      query_params[:'portfolioID'] = opts[:'portfolio_id'] if !opts[:'portfolio_id'].nil?
      query_params[:'buildingID'] = opts[:'building_id'] if !opts[:'building_id'].nil?
      query_params[:'type'] = opts[:'type'] if !opts[:'type'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Array<Inspection>'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['organizationId', 'clientId', 'clientSecret']

      new_options = opts.merge(
        :operation => :"InspectionsApi.get_inspections",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InspectionsApi#get_inspections\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
