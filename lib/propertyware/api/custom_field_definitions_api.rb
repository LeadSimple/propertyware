=begin
#Open API, powered by Propertyware


The version of the OpenAPI document: 1.0
Contact: support@propertyware.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'cgi'

module Propertyware
  class CustomFieldDefinitionsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve list of custom field definitions.
    # Retrieve list of custom field definitions.<br/><br/><b>Required permission:</b><br/><span class=\"permissionBlock\">CUSTOM FIELD</span> - <code>Read</code> 
    # @param entity_type [String] Entity type, allowed entity types (Asset, Building, Contact, Lease, Portfolio, Prospect, Unit, Vendor, WorkOrder, ServiceAgreement)
    # @param [Hash] opts the optional parameters
    # @return [Array<CustomFieldDefinition>]
    def retrieve_custom_field_definitions(entity_type, opts = {})
      data, _status_code, _headers = retrieve_custom_field_definitions_with_http_info(entity_type, opts)
      data
    end

    # Retrieve list of custom field definitions.
    # Retrieve list of custom field definitions.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Required permission:&lt;/b&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;permissionBlock\&quot;&gt;CUSTOM FIELD&lt;/span&gt; - &lt;code&gt;Read&lt;/code&gt; 
    # @param entity_type [String] Entity type, allowed entity types (Asset, Building, Contact, Lease, Portfolio, Prospect, Unit, Vendor, WorkOrder, ServiceAgreement)
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<CustomFieldDefinition>, Integer, Hash)>] Array<CustomFieldDefinition> data, response status code and response headers
    def retrieve_custom_field_definitions_with_http_info(entity_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomFieldDefinitionsApi.retrieve_custom_field_definitions ...'
      end
      # verify the required parameter 'entity_type' is set
      if @api_client.config.client_side_validation && entity_type.nil?
        fail ArgumentError, "Missing the required parameter 'entity_type' when calling CustomFieldDefinitionsApi.retrieve_custom_field_definitions"
      end
      # resource path
      local_var_path = '/customfields/{entityType}/definitions'.sub('{' + 'entityType' + '}', CGI.escape(entity_type.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Array<CustomFieldDefinition>'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['organizationId', 'clientId', 'clientSecret']

      new_options = opts.merge(
        :operation => :"CustomFieldDefinitionsApi.retrieve_custom_field_definitions",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomFieldDefinitionsApi#retrieve_custom_field_definitions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
